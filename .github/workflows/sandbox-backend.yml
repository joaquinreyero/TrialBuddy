name: Sandbox CI

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Image Tag
        id: tag
        run: echo "::set-output name=tag::$(git log --pretty=format:'%h' -n 1)"

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.tag.outputs.tag }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.tag.outputs.tag }}

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.tag.outputs.tag }}

      - name: Authenticate with Google Cloud Platform
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Tag Docker image for Google Container Registry
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ steps.tag.outputs.tag }} gcr.io/${{ secrets.PROJECT_ID }}/backend:${{ steps.tag.outputs.tag }}

      - name: Authenticate Docker to Google Container Registry
        run: gcloud auth configure-docker

      - name: Push Docker image to Google Container Registry
        run: docker push gcr.io/${{ secrets.PROJECT_ID }}/backend:${{ steps.tag.outputs.tag }}

      - name: Deploy On Google Cloud
        run: |
          gcloud run deploy backend \
            --image gcr.io/${{ secrets.PROJECT_ID }}/backend:${{ steps.tag.outputs.tag }} \
            --platform managed \
            --region us-east1 \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.SQL_INSTANCE }} \
            --project ${{ secrets.PROJECT_ID }} \
            --update-env-vars DATABASE_URI="${{ secrets.DATABASE_URI }}",ENVIRONMENT="${{ secrets.ENVIRONMENT }}",PAYPAL_CLIENT_ID="${{ secrets.PAYPAL_CLIENT_ID }}",PAYPAL_CLIENT_SECRET="${{ secrets.PAYPAL_CLIENT_SECRET }}",PAYPAL_BASE_URL="${{ secrets.PAYPAL_BASE_URL }}",ACCESS_TOKEN_EXPIRE_MINUTES="${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}",TOKEN_SECRET_KEY="${{ secrets.TOKEN_SECRET_KEY }}",TOKEN_ALGORITHM="${{ secrets.TOKEN_ALGORITHM }}",SMTP_SERVER="${{ secrets.SMTP_SERVER }}",SMTP_PORT="${{ secrets.SMTP_PORT }}",EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}",PASSWORD_EMAIL="${{ secrets.PASSWORD_EMAIL }}",SECRET_KEY_EMAIL="${{ secrets.SECRET_KEY_EMAIL }}",ALGORITHM_EMAIL="${{ secrets.ALGORITHM_EMAIL }}"
